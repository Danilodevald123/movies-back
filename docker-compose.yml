version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: conexa-postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - conexa-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: conexa-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
      SWAPI_BASE_URL: ${SWAPI_BASE_URL}
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - conexa-network
    command: sh -c "npm run migration:run && npm run seed:all && node dist/main"

  pgadmin:
    image: dpage/pgadmin4
    container_name: conexa-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@conexa.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - conexa-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  conexa-network:
    driver: bridge
